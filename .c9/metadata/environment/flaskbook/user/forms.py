{"filter":false,"title":"forms.py","tooltip":"/flaskbook/user/forms.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":33,"column":8},"action":"insert","lines":["from flask_wtf import Form","from wtforms import validators, StringField, PasswordField","from wtforms.fields.html5 import EmailField","from wtforms.validators import ValidationError","","from user.models import User","","class RegisterForm(Form):","    first_name = StringField('First Name', [validators.Required()])","    last_name = StringField('Last Name', [validators.Required()])","    email = EmailField('Email address', [","        validators.DataRequired(),","        validators.Email()","        ]","    )","    username = StringField('Username', [","        validators.Required(),","        validators.length(min=4, max=25)","        ])","    password = PasswordField('New Password', [","        validators.Required(),","        validators.EqualTo('confirm', message='Passwords must match'),","        validators.length(min=4, max=80)","        ])","    confirm = PasswordField('Repeat Password')","    ","    def validate_username(form, field):","        if User.objects.filter(username=field.data).first():","            raise ValidationError(\"Username already exists\")","            ","    def validate_email(form, field):","        if User.objects.filter(email=field.data).first():","            raise ValidationError(\"Email is already in use\")","        "],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":8},"action":"remove","lines":["from flask_wtf import Form","from wtforms import validators, StringField, PasswordField","from wtforms.fields.html5 import EmailField","from wtforms.validators import ValidationError","","from user.models import User","","class RegisterForm(Form):","    first_name = StringField('First Name', [validators.Required()])","    last_name = StringField('Last Name', [validators.Required()])","    email = EmailField('Email address', [","        validators.DataRequired(),","        validators.Email()","        ]","    )","    username = StringField('Username', [","        validators.Required(),","        validators.length(min=4, max=25)","        ])","    password = PasswordField('New Password', [","        validators.Required(),","        validators.EqualTo('confirm', message='Passwords must match'),","        validators.length(min=4, max=80)","        ])","    confirm = PasswordField('Repeat Password')","    ","    def validate_username(form, field):","        if User.objects.filter(username=field.data).first():","            raise ValidationError(\"Username already exists\")","            ","    def validate_email(form, field):","        if User.objects.filter(email=field.data).first():","            raise ValidationError(\"Email is already in use\")","        "],"id":2},{"start":{"row":0,"column":0},"end":{"row":33,"column":8},"action":"insert","lines":["from flask_wtf import Form","from wtforms import validators, StringField, PasswordField","from wtforms.fields.html5 import EmailField","from wtforms.validators import ValidationError","","from user.models import User","","class RegisterForm(Form):","    first_name = StringField('First Name', [validators.Required()])","    last_name = StringField('Last Name', [validators.Required()])","    email = EmailField('Email address', [","        validators.DataRequired(),","        validators.Email()","        ]","    )","    username = StringField('Username', [","        validators.Required(),","        validators.length(min=4, max=25)","        ])","    password = PasswordField('New Password', [","        validators.Required(),","        validators.EqualTo('confirm', message='Passwords must match'),","        validators.length(min=4, max=80)","        ])","    confirm = PasswordField('Repeat Password')","    ","    def validate_username(form, field):","        if User.objects.filter(username=field.data).first():","            raise ValidationError(\"Username already exists\")","            ","    def validate_email(form, field):","        if User.objects.filter(email=field.data).first():","            raise ValidationError(\"Email is already in use\")","        "]}]]},"ace":{"folds":[],"scrolltop":99.0859375,"scrollleft":0,"selection":{"start":{"row":28,"column":4},"end":{"row":28,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/python"}},"timestamp":1564194607512,"hash":"725490d4ee066d6ee3110d9f58df3df95fcd8163"}